//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication4.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HospitalEntities : DbContext
    {
        public HospitalEntities()
            : base("name=HospitalEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Doctor> Doctor { get; set; }
        public virtual DbSet<Doctor_has_Patient> Doctor_has_Patient { get; set; }
        public virtual DbSet<Patient> Patient { get; set; }
        public virtual DbSet<Speciality> Speciality { get; set; }
    
        public virtual ObjectResult<kvitancia_Result> kvitancia(Nullable<int> idP)
        {
            var idPParameter = idP.HasValue ?
                new ObjectParameter("idP", idP) :
                new ObjectParameter("idP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<kvitancia_Result>("kvitancia", idPParameter);
        }
    
        public virtual ObjectResult<salary_Result> salary(Nullable<System.DateTime> firsDate, Nullable<System.DateTime> lastDate)
        {
            var firsDateParameter = firsDate.HasValue ?
                new ObjectParameter("firsDate", firsDate) :
                new ObjectParameter("firsDate", typeof(System.DateTime));
    
            var lastDateParameter = lastDate.HasValue ?
                new ObjectParameter("lastDate", lastDate) :
                new ObjectParameter("lastDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<salary_Result>("salary", firsDateParameter, lastDateParameter);
        }
    }
}
